name: Build, push, and deploy

on:
  push:
    branches:
      - dev
      - master

permissions:
  contents: "write"
  id-token: "write"

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: mvn package
        run: mvn package

      - name: Build and push docker image to Google Artifact Registry
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: okonomi
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-qx:
    name: Deploy to dev-fss qx
    needs: build
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          IMAGE: ${{ needs.build.outputs.image }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: .nais/naiserator-qx.yaml
          TIMEOUT: 10m
          PRINT_PAYLOAD: true

  deploy-q1:
    name: Deploy to dev-fss q1
    needs: build
    if: github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v2
        env:
          IMAGE: ${{ needs.build.outputs.image }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: .nais/naiserator-q1.yaml
          TIMEOUT: 10m
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to prod-fss
    needs: [ build, deploy-q1 ]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v2
        env:
          IMAGE: ${{ needs.build.outputs.image }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: .nais/naiserator-p.yaml
          TIMEOUT: 10m
          PRINT_PAYLOAD: true

